provider "openstack" {
  user_name   = "{{ username }}"
  tenant_name = "{{ projectname }}"
  auth_url    = "https://identity.openstack.cloudvps.com:443/v3"
}


resource "openstack_networking_network_v2" "network_{{ clustername }}" {
  name           = "network_{{ clustername }}"
  admin_state_up = "true"
}

resource "openstack_networking_subnet_v2" "subnet_{{ clustername }}" {
  name       = "subnet_{{ clustername }}"
  network_id = "${openstack_networking_network_v2.network_{{ clustername }}.id}"
  cidr       = "{{ subnetcidr }}"
  ip_version = 4
}

resource "openstack_networking_router_v2" "k8s_{{ clustername }}_router" {
  name             = "k8s_{{ clustername }}_router"
  external_gateway = "f9c73cd5-9e7b-4bfd-89eb-c2f4f584c326"
}

resource "openstack_networking_router_interface_v2" "k8s_{{ clustername }}_router_interface" {
  router_id = "${openstack_networking_router_v2.k8s_{{ clustername }}_router.id}"
  subnet_id = "${openstack_networking_subnet_v2.subnet_{{ clustername }}.id}"
}

resource "openstack_compute_secgroup_v2" "secgroup_{{ clustername }}_set1" {
  name        = "secgroup_{{ clustername }}_set1"
  description = "a security group"

  rule {
    from_port   = 22
    to_port     = 22
    ip_protocol = "tcp"
    cidr        = "0.0.0.0/0"
  }

  rule {
    from_port   = 80
    to_port     = 80
    ip_protocol = "tcp"
    cidr        = "0.0.0.0/0"
  }

  rule {
    from_port   = 443
    to_port     = 443
    ip_protocol = "tcp"
    cidr        = "0.0.0.0/0"
  }

  rule {
    from_port   = 8081
    to_port     = 8081
    ip_protocol = "tcp"
    cidr        = "0.0.0.0/0"
  }

}

resource "openstack_compute_secgroup_v2" "secgroup_{{ clustername }}_set2" {
  name        = "secgroup_{{ clustername }}_set2"
  description = "Allow internal LAN communication"

  rule {
    from_port   = 1
    to_port     = 65535
    ip_protocol = "tcp"
    cidr        = "{{ subnetcidr }}"
  }

  rule {
    from_port   = 1
    to_port     = 65535
    ip_protocol = "udp"
    cidr        = "{{ subnetcidr }}"
  }

  rule {
    from_port   = -1
    to_port     = -1
    ip_protocol = "icmp"
    cidr        = "{{ subnetcidr }}"
  }
}

resource "openstack_compute_secgroup_v2" "secgroup_{{ clustername }}_set3" {
  name        = "secgroup_{{ clustername }}_set3"
  description = "Allow internal LAN communication"

  rule {
    from_port   = 1
    to_port     = 65535
    ip_protocol = "tcp"
    cidr        = "0.0.0.0/0"
  }

  rule {
    from_port   = 1
    to_port     = 65535
    ip_protocol = "udp"
    cidr        = "0.0.0.0/0"
  }

  rule {
    from_port   = -1
    to_port     = -1
    ip_protocol = "icmp"
    cidr        = "0.0.0.0/0"
  }
}


{%- set counter = 10 %}
{%- for _ in range(counter, counter+nodes) %}
resource "openstack_networking_port_v2" "k8s_{{ clustername }}_port_{{ counter + loop.index - 1 }}" {
  name               = "k8s_{{ clustername }}_port_{{ counter + loop.index - 1 }}"
  network_id         = "${openstack_networking_network_v2.network_{{ clustername }}.id}"
  admin_state_up     = "true"
  security_group_ids = ["${openstack_compute_secgroup_v2.secgroup_{{ clustername }}_set1.id}","${openstack_compute_secgroup_v2.secgroup_{{ clustername }}_set2.id}"]

  fixed_ip {
    "subnet_id"  = "${openstack_networking_subnet_v2.subnet_{{ clustername }}.id}"
    "ip_address" = "{{ subnetcidr.rsplit('.', 1)[0] }}.{{ counter + loop.index - 1 }}"
  }
}


resource "openstack_compute_instance_v2" "k8s-{{ clustername }}-node{{ counter + loop.index -1 }}" {
  name      = "k8s-{{ clustername }}-node{{ counter + loop.index - 1 }}"
  availability_zone = "AMS-EQ1"
  image_name  = "Container Linux CoreOS (third-party)"
  flavor_id = "{{ imageflavor }}"
  key_pair  = "{{ keypair }}"
  security_groups = ["${openstack_compute_secgroup_v2.secgroup_{{ clustername }}_set1.name}","${openstack_compute_secgroup_v2.secgroup_{{ clustername }}_set2.name}"]
  user_data = "${file("cloudinit_generator/set/node_{{ subnetcidr.rsplit('.', 1)[0] }}.{{ counter + loop.index -1  }}.yaml")}"

  network {
    name = "${openstack_networking_network_v2.network_{{ clustername }}.name}"
    port = "${openstack_networking_port_v2.k8s_{{ clustername }}_port_{{ counter + loop.index - 1}}.id}"
  }
}

{% endfor %}

resource "openstack_compute_floatingip_associate_v2" "fip_{{ clustername }}_f1" {
  instance_id = "${openstack_compute_instance_v2.k8s-{{ clustername }}-node10.id}"
  floating_ip = "{{ floatingip1 }}"
}

resource "openstack_compute_floatingip_associate_v2" "fip_{{ clustername }}_f2" {
  instance_id = "${openstack_compute_instance_v2.k8s-{{ clustername }}-node12.id}"
  floating_ip = "{{ floatingip2 }}"
}
